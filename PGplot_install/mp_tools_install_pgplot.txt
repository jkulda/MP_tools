A/ Linux UBUNTU/DEBIAN

Use APT to install the PGPLOT5 libraries:
  > sudo apt install pgplot5

Alternatively you may download the package from UBUNTU MULTIVERSE
  https://ubuntu.pkgs.org/20.04/ubuntu-multiverse-amd64/pgplot5_5.2.2-19.3build3_amd64.deb.html

In case you plan to use bitmap output in the PNG format with a (twice) better resolution 
than the rudimentary 85 ppi of the original version, you still wish to get the original 
PGPLOT distribution package (cf. below) and to compile it locally (cf. the MPtools compile 
script). This is also the way to get the PGPLOT demo programs.


B/ Mac OS X

Download both the pgplot tarfile and the specific configuration files for MacOSX created by Benjamin Weiner and copy/move them into
  > cd /usr/local/src/:
  > wget -cNS --retr-symlinks ftp://ftp.astro.caltech.edu/pub/pgplot/pgplot5.2.tar.gz 
  > wget -cNS http://mingus.as.arizona.edu/~bjw/software/pgplot_macosx_conf.tar

Unpack the tarfiles:
  > tar -zxvf pgplot5.2.tar.gz 
  > cd /usr/local/src/pgplot/ 
  > tar -xvf ../pgplot_macosx_conf.tar

Create the installation directory in /usr/local (may need sudo):
  > sudo mkdir -p /usr/local/pgplot
  > cd /usr/local/pgplot/ 
and  copy there the drivers.list  
  > cp /usr/local/src/pgplot/drivers.list .

to select the drivers edit the drivers.list: uncomment the drivers needed for MP_TOOLS:  
/NULL, /XSERVE, /PNG, /TPNG, /CPS, /VCPS
(TPNG is PNG with a transparent background)

Edit the configuration file for your system MacOSX (64bit) 
(you may need to copy the attached sys_macosx directory into /usr/local/src/pgplot)):
when using the GCC compiler suite (recommended), change the FCOMPL and CCOMPL lines to 
FCOMPL="/usr/local/bin/gfortran" 
CCOMPL="/usr/local/bin/gcc" 
(btw put SHARED_LIB="" so only the static library libpgplot.a will be generated).

Modify the file /usr/local/src/pgplot/makemake:
comment out the line 
  pndriv.o : ./png.h ./pngconf.h ./zlib.h ./zconf.h 
i.e.
  #pndriv.o : ./png.h ./pngconf.h ./zlib.h ./zconf.h 

Run MAKEMAKE 
  > cd /usr/local/pgplot/ 
  > /usr/local/src/pgplot/makemake /usr/local/pgplot macosx gfortran_gcc_64

Copy the corrected PNG driver into the drivers list (overwrite the original one)
  > cp pndriv_corrected_hires.c ./drivers/pndriv.c  

and then do the MAKE 
  > make 
runs with (many) warnings, but hopefully no faults; once got through, do
  > make clean 
The static library libpgplot.a should now be present in /usr/local/pgplot.

Check that there is no older version of LIBPGPLOT.A elsewhere in the linking path (/usr/local/lib);
but there is no point to move the new version there, because anyways the /usr/local/pgplot directory 
has to be added to the linking path (-L/usr/local/pgplot) to provide access to the other PGPLOT resources;

Linking a fortran code against pgplot needs to include the X11 and the PNG libraries:
/usr/local/bin/gfortran stuff.f -o stuff -ffixed-line-length-132 -L/usr/pkg/pgplot -lpgplot -lX11 -lpng 
on systems, where the X11 libraries are not part of standard configuration, you may need 
to add their path as well (-L/usr/X11/lib)  

The revised PNG driver's functionality hasn't changed, but in addition to the "canonic" bug
fix: 
  " setjmp(png_ptr->jmpbuf)"  that should be   "setjmp(png_jmpbuf(png_ptr))" (line â‰ˆ250)

we have also revisited the obsolete 85 ppi resolution of the bitmap output. 
In fact:
 - the DEFAULT_WIDTH and DEFAULT_HEIGHT do not seem relevant,  apparently internally 
   PGPLOT works with a maximum image size of 8"x8" and maximum 1280x1280 pixels
 - thus the default resolution, originally at 85 ppi, has been increased to 160 ppi  
 - the resolution can be further modified by setting a new environment variable PGPLOT_PNG_PPI,
   but above the value of 160 ppi it will result in partial fills of the image field
 - a new ERROR message on STDOUT warns when the PNG was not saved
 - use STDERR redirection to STDOUT for more diagnostics: $> my_prog 2>&1
 - error messages on STDERR are now numbered for easier localisation in the source code
