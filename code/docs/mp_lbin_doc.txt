******************************************************************************************
MP_LBIN

converts the LAMMPS MD snapshot data, usually in form of separate snapshot files, to the MP_TOOLS binary format using the CELL mode as default (cf. MP_BIN_DOC.TXT). MP_LBIN can read a contiguous succession of separate snapshot files, a concatenated trajectory, containing all snapshots in a single file, or the combination of both; the corresponding information is specified in the corresponding .PAR file and in the input dialogue. In particular, MP_LBIN reads from the .PAR file (section 'mp_lammps') information on the right interpretation of the atom_type in the input ASCII file.  

The standard LAMMPS DUMP directive (within its in.* input file)	specifies among others the output file structure (single snapshots vers. concatenated trajectory) and the contents output records, eg. 			

	dump 1 all custom 50 ${fil_nam}.* id type element mass x y z vx vy vz 															  
																
Here the ${fil_nam} with .* will create separate files for each snapshot. Alternatively a concatenated output can be obtained by omitting the '.*' characters and adding the directive	
	dump_modify 	1 append yes			

After the output file specification follows a list of standard variable names, which specifies their order in each atom record. The same information is contained in the ITEM: ATOMS header line of the snapshot preceding the atom records, eg.

	...
	ITEM: ATOMS id type element mass x y z vx vy vz
	1 1 Cu1 63.55 173.919 -0.368474 -0.425633 0.47397 -0.215569 4.752
	2 2 Cu2 63.55 1.51811 1.4525 -0.425971 -1.96235 -3.07269 1.73004
	...

MP_LBIN  uses this information to parse the output records; at present the following LAMMPS variables  	

	id = atom ID
	type = atom type
	element = name of atom element, as defined by dump_modify command
	mass = atom mass
	x,y,z = unscaled atom coordinates
	vx,vy,vz = atom velocities
	fx,fy,fz = forces on atoms
	q = atom charge

are recognized by MP_LBIN and transfered into the binary file depending on choices made in the input dialogue and in the corresponding .PAR file. Any other variables may be present in the dump, but they will be ignored upon reading as dummy fields. In case of need, they can be added by modifying the MP_LBIN source code. Arrays containing additional variables should always be appended at the end of the binary output file to preserve compatibility with MP_TOOLS data standard (cf. MP_BIN_DOC.TXT for the binary file structure description).

The Y,Y,Z atom positions in the LAMMPS dump files are given in length units (Ã…) and need to be reduced to the lattice units. In a first approximation MP_LBIN derives the lattice parameter from the supercell dimensions and from the corresponding cell numbers; after having converted the first snapshot their values are refined from the atom positions in 2-3 cell layers close to the supercell surface - the new values can be used to correct the reduced coordinates of the atoms.

The atomic positions within the unit cell (basis) are identified by testing each atom's displacement from the regular unit cell position defined in the external .PAR file

					maxval(abs(pos_inp-anint(pos_inp)))<eps_x

This procedure may become unreliable when the displacements become large (high T), therefore it is wise to specify each single atom within the unit cell as a distinct atom type already when creating the supercell for the MD simulation. In such a case MP_LBIN will atribute the lattice site by reference without testing the displacement; to do so the switch in the MP_LAMMPS section of the .PAR file has to be set accordingly. In addition specific names can be attributed to each atom type (cf. NOTES). Using the atom ID for this purpose is not recommendable in general as its value depends on the way how the supercell has been set up (lattice command, file input ...).

In cases where the one-to-one assignment of atoms to lattice positions is impossible or unreliable the dump data can be read in the BULK mode (indicated in the MP_BIN section of the .PAR file). The binary data will contain only positions and velocities and will permit only a restricted (but still useful) functionality of the MP_TOOLS, blocking some advanced functions making reference to the atomic sub-lattices (direct PDF calculation, one-phonon approximation of S(Q,w)).

NOTES: 

1/ when setting up the MD simulation with LAMMPS, it is useful to modify in the input file section dealing with the 'production' runs the corresponding DUMP directive, eg.

	dump 1 all custom 50 ${fil_nam}.* id type element mass x y z vx vy vz 															  

by the following DUMP_MODIFY directives (1 is the number of the directive to be modified) 

	dump_modify 	1 time yes				#the dump time is included in the snapshot header 
	dump_modify 	1 pbc yes					#remap atoms via periodic boundary conditions
	dump_modify 	1 sort id					#sort the output according to atom ID
	dump_modify 	1 element Cu1 Cu2 Cu3 Cu4 			# element names are related to atom types

While the dump time is only important when simulating dynamical processes (S(Q,w) and/or phonon DOS to be extracted), the periodic boundary conditions are an important ingredient for any form of Fourier transform between the direct and reciprocal space.												

2/it is crucial to bear in mind that in LAMMPS, whenever it runs under MPI paralelisation, the supercell is ad-hoc separated into blocks attributed to each process, the communication between the blocks operates only from time to time and the dump of the snapshots occurs in the order of the processes being ready - hence the output data blocks DO NOT NECESSARILY FOLLOW THE ORDER OF THE SITE INDEXATION!   



